{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Documentation site","title":"Home"},{"location":"#documentation-site","text":"","title":"Documentation site"},{"location":"about/","text":"Fist test This is my first test with mkdocs Second test This is my second test with mkdocs","title":"Fist test"},{"location":"about/#fist-test","text":"This is my first test with mkdocs","title":"Fist test"},{"location":"about/#second-test","text":"This is my second test with mkdocs","title":"Second test"},{"location":"antix/","text":"antiX installation procedure Here is the way to install antiX Linux. The procedure below was used on the 31st of December 2022 Download the ISO file Download site For the X86 32 bits version: antiX-21_386-full.iso Verify the integrity of the ISO file Download the checksum and signature files antiX-21_386-full.iso.md5 antiX-21_386-full.iso.sha256 antiX-21_386-full.iso.sig Verify md5sum md5sum antiX-19.2.1_x64-base.iso Verify sha256sum sha256sum antiX-19.2.1_x64-base.iso Verify the signature Import the public developer's key gpg --keyserver hkp://keys.openpgp.org --recv-keys A80582E000067FDD The key server where to find the developer's public key is hkp://keys.openpgp.org IDs of developer's pulic key can be found at https://mxlinux.org/wiki/system/signed-iso-files/ . ID A80582E000067FDD was used in the command above Verify the ISO signature gpg --verify antiX-21_386-full.iso.sig antiX-21_386-full.iso Output looks like: gpg: Signature made Sun 31 Dec 2021 08:52:05 PM IST gpg: using RSA key 30AA418A0C723D937B50A986A80582E000067FDD gpg: Good signature from \"anticapitalista <antiX@operamail.com>\" (unknown) gpg: WARNING: This key is not certified with a trusted signature! gpg: There is no indication that the signature belongs to the owner. Primary key fingerprint: 30AA 418A 0C72 3D93 7B50 A986 A805 82E0 0006 7FDD Create a bootable USB stick from the ISO Check the devices lsblk Write the USB key sudo dd if=antiX-21_386-full.iso of=/dev/sdc conv=fsync status=progress References and resources Old procedure to install antiX It also gives some information on antiX Linux. GPG Signing Issue MX 19.2 GPG Key antiX-17.4.1_386-full Signed iso files Live CD/USB Guide Open PGP Misc what's the difference between MX linux and antiX? antiX Linux website MX Linux website MX Linux forum","title":"antiX"},{"location":"antix/#antix-installation-procedure","text":"Here is the way to install antiX Linux. The procedure below was used on the 31st of December 2022","title":"antiX installation procedure"},{"location":"antix/#download-the-iso-file","text":"Download site For the X86 32 bits version: antiX-21_386-full.iso","title":"Download the ISO file"},{"location":"antix/#verify-the-integrity-of-the-iso-file","text":"Download the checksum and signature files antiX-21_386-full.iso.md5 antiX-21_386-full.iso.sha256 antiX-21_386-full.iso.sig","title":"Verify the integrity of the ISO file"},{"location":"antix/#verify-md5sum","text":"md5sum antiX-19.2.1_x64-base.iso","title":"Verify md5sum"},{"location":"antix/#verify-sha256sum","text":"sha256sum antiX-19.2.1_x64-base.iso","title":"Verify sha256sum"},{"location":"antix/#verify-the-signature","text":"Import the public developer's key gpg --keyserver hkp://keys.openpgp.org --recv-keys A80582E000067FDD The key server where to find the developer's public key is hkp://keys.openpgp.org IDs of developer's pulic key can be found at https://mxlinux.org/wiki/system/signed-iso-files/ . ID A80582E000067FDD was used in the command above Verify the ISO signature gpg --verify antiX-21_386-full.iso.sig antiX-21_386-full.iso Output looks like: gpg: Signature made Sun 31 Dec 2021 08:52:05 PM IST gpg: using RSA key 30AA418A0C723D937B50A986A80582E000067FDD gpg: Good signature from \"anticapitalista <antiX@operamail.com>\" (unknown) gpg: WARNING: This key is not certified with a trusted signature! gpg: There is no indication that the signature belongs to the owner. Primary key fingerprint: 30AA 418A 0C72 3D93 7B50 A986 A805 82E0 0006 7FDD","title":"Verify the signature"},{"location":"antix/#create-a-bootable-usb-stick-from-the-iso","text":"Check the devices lsblk Write the USB key sudo dd if=antiX-21_386-full.iso of=/dev/sdc conv=fsync status=progress","title":"Create a bootable USB stick from the ISO"},{"location":"antix/#references-and-resources","text":"Old procedure to install antiX It also gives some information on antiX Linux. GPG Signing Issue MX 19.2 GPG Key antiX-17.4.1_386-full Signed iso files Live CD/USB Guide Open PGP","title":"References and resources"},{"location":"antix/#misc","text":"what's the difference between MX linux and antiX? antiX Linux website MX Linux website MX Linux forum","title":"Misc"},{"location":"devops/","text":"Docker Kubernetes Istio Istio is a servicd mesh. A service mesh is a dedicated infrastructure layer that can added to an applications. It allows to transparently add capabilities like observability, traffic management, and security, without adding them to the code. The term \u201cservice mesh\u201d describes both the type of software used to implement this pattern, and the security or network domain that is created when that software is used. Link to Istio Canary deployment OpenStack Open Source Cloud Software CD/CI pipeline on the net link Sites thenewstack CI/CD with kubernetes orchestrators","title":"devops"},{"location":"devops/#docker","text":"","title":"Docker"},{"location":"devops/#kubernetes","text":"","title":"Kubernetes"},{"location":"devops/#istio","text":"Istio is a servicd mesh. A service mesh is a dedicated infrastructure layer that can added to an applications. It allows to transparently add capabilities like observability, traffic management, and security, without adding them to the code. The term \u201cservice mesh\u201d describes both the type of software used to implement this pattern, and the security or network domain that is created when that software is used. Link to Istio Canary deployment","title":"Istio"},{"location":"devops/#openstack","text":"Open Source Cloud Software","title":"OpenStack"},{"location":"devops/#cdci-pipeline-on-the-net","text":"link","title":"CD/CI pipeline on the net"},{"location":"devops/#sites","text":"thenewstack CI/CD with kubernetes orchestrators","title":"Sites"},{"location":"git/","text":"Configure git to pass user name and password see link","title":"git"},{"location":"git/#configure-git-to-pass-user-name-and-password","text":"see link","title":"Configure git to pass user name and password"},{"location":"lfs/","text":"Linux From Scatch documentation Some useful links LFS Version 11 - September 2021 - French Building and Installing Software Packages for Linux Beginner's Guide to Installing from Source Linux From Scratch 10.1 Notes LFS and UEFI Making the LFS System Bootable USING GRUB ON UEFI Booting LFS and UEFI","title":"LFS"},{"location":"lfs/#linux-from-scatch-documentation","text":"Some useful links","title":"Linux From Scatch documentation"},{"location":"lfs/#lfs","text":"Version 11 - September 2021 - French Building and Installing Software Packages for Linux Beginner's Guide to Installing from Source Linux From Scratch 10.1 Notes","title":"LFS"},{"location":"lfs/#lfs-and-uefi","text":"Making the LFS System Bootable USING GRUB ON UEFI Booting LFS and UEFI","title":"LFS and UEFI"},{"location":"mkdocs/","text":"mkdocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"mkdocs"},{"location":"mkdocs/#mkdocs","text":"For full documentation visit mkdocs.org .","title":"mkdocs"},{"location":"mkdocs/#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"mkdocs/#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"scrum/","text":"Some link related to scrum What are scrum task boards Task Task-2 The scrum guide How detailed should tasks within a user story be for agile teams? Begin planning with JIRA - EPICs, Stories, Subtasks Epics, Stories, Tasks, Subtasks... what's the difference Configuring sub-tasks Training Atlassian","title":"scrum"},{"location":"scrum/#some-link-related-to-scrum","text":"What are scrum task boards Task Task-2 The scrum guide How detailed should tasks within a user story be for agile teams? Begin planning with JIRA - EPICs, Stories, Subtasks Epics, Stories, Tasks, Subtasks... what's the difference Configuring sub-tasks Training Atlassian","title":"Some link related to scrum"},{"location":"tools/","text":"Browser Dark Reader","title":"tools"},{"location":"tools/#browser","text":"Dark Reader","title":"Browser"},{"location":"trainings/","text":"Training sites linux foundation youtube - kubernetes IBM kubernetes training","title":"trainings"},{"location":"trainings/#training-sites","text":"linux foundation youtube - kubernetes IBM kubernetes training","title":"Training sites"},{"location":"vim/","text":"My vim tips and tricks How to run bash command over current file and replace buffer with result? :!{cmd} sends {cmd} to the shell which executes it and shows its output on the screen. :{range}!{filter} sends the lines from the current buffer inside {range} as the input of the {filter} program and replaces them with its output. range filter :! By itself, runs the last external command (from your shell history) :!! Repeats the last command :silent !{cmd} Eliminates the need to hit enter after the command is done :r !{cmd} Puts the output of $cmd into the current buffer. return to vim after ctrl-z: fg References Link 1 Link 2 Link 3 Executing VIM commands in a shell script To check: Link 1 Vim scripting Cheat sheet","title":"vimtips"},{"location":"vim/#my-vim-tips-and-tricks","text":"","title":"My vim tips and tricks"},{"location":"vim/#how-to-run-bash-command-over-current-file-and-replace-buffer-with-result","text":":!{cmd} sends {cmd} to the shell which executes it and shows its output on the screen. :{range}!{filter} sends the lines from the current buffer inside {range} as the input of the {filter} program and replaces them with its output. range filter :! By itself, runs the last external command (from your shell history) :!! Repeats the last command :silent !{cmd} Eliminates the need to hit enter after the command is done :r !{cmd} Puts the output of $cmd into the current buffer. return to vim after ctrl-z: fg","title":"How to run bash command over current file and replace buffer with result?"},{"location":"vim/#references","text":"Link 1 Link 2 Link 3","title":"References"},{"location":"vim/#executing-vim-commands-in-a-shell-script","text":"To check: Link 1","title":"Executing VIM commands in a shell script"},{"location":"vim/#vim-scripting","text":"Cheat sheet","title":"Vim scripting"}]}